// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class spaceportAddLiquidity extends ethereum.Event {
  get params(): spaceportAddLiquidity__Params {
    return new spaceportAddLiquidity__Params(this);
  }
}

export class spaceportAddLiquidity__Params {
  _event: spaceportAddLiquidity;

  constructor(event: spaceportAddLiquidity) {
    this._event = event;
  }
}

export class spaceportOwnerWithdrawTokens extends ethereum.Event {
  get params(): spaceportOwnerWithdrawTokens__Params {
    return new spaceportOwnerWithdrawTokens__Params(this);
  }
}

export class spaceportOwnerWithdrawTokens__Params {
  _event: spaceportOwnerWithdrawTokens;

  constructor(event: spaceportOwnerWithdrawTokens) {
    this._event = event;
  }
}

export class spaceportUserDeposit extends ethereum.Event {
  get params(): spaceportUserDeposit__Params {
    return new spaceportUserDeposit__Params(this);
  }
}

export class spaceportUserDeposit__Params {
  _event: spaceportUserDeposit;

  constructor(event: spaceportUserDeposit) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class spaceportUserWithdrawBaseTokens extends ethereum.Event {
  get params(): spaceportUserWithdrawBaseTokens__Params {
    return new spaceportUserWithdrawBaseTokens__Params(this);
  }
}

export class spaceportUserWithdrawBaseTokens__Params {
  _event: spaceportUserWithdrawBaseTokens;

  constructor(event: spaceportUserWithdrawBaseTokens) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class spaceportUserWithdrawTokens extends ethereum.Event {
  get params(): spaceportUserWithdrawTokens__Params {
    return new spaceportUserWithdrawTokens__Params(this);
  }
}

export class spaceportUserWithdrawTokens__Params {
  _event: spaceportUserWithdrawTokens;

  constructor(event: spaceportUserWithdrawTokens) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Spaceport__BUYERSResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class Spaceport__SPACEPORT_FEE_INFOResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }
}

export class Spaceport__SPACEPORT_INFOResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: BigInt;
  value12: BigInt;
  value13: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: BigInt,
    value12: BigInt,
    value13: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    map.set("value12", ethereum.Value.fromUnsignedBigInt(this.value12));
    map.set("value13", ethereum.Value.fromBoolean(this.value13));
    return map;
  }
}

export class Spaceport__SPACEPORT_VESTINGResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Spaceport__STATUSResult {
  value0: boolean;
  value1: boolean;
  value2: boolean;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: boolean,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }
}

export class Spaceport extends ethereum.SmartContract {
  static bind(address: Address): Spaceport {
    return new Spaceport("Spaceport", address);
  }

  BUYERS(param0: Address): Spaceport__BUYERSResult {
    let result = super.call(
      "BUYERS",
      "BUYERS(address):(uint256,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Spaceport__BUYERSResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean()
    );
  }

  try_BUYERS(param0: Address): ethereum.CallResult<Spaceport__BUYERSResult> {
    let result = super.tryCall(
      "BUYERS",
      "BUYERS(address):(uint256,uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Spaceport__BUYERSResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean()
      )
    );
  }

  CONTRACT_VERSION(): BigInt {
    let result = super.call(
      "CONTRACT_VERSION",
      "CONTRACT_VERSION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_CONTRACT_VERSION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "CONTRACT_VERSION",
      "CONTRACT_VERSION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PLASMASWAP_FACTORY(): Address {
    let result = super.call(
      "PLASMASWAP_FACTORY",
      "PLASMASWAP_FACTORY():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_PLASMASWAP_FACTORY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "PLASMASWAP_FACTORY",
      "PLASMASWAP_FACTORY():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  SPACEPORT_FEE_INFO(): Spaceport__SPACEPORT_FEE_INFOResult {
    let result = super.call(
      "SPACEPORT_FEE_INFO",
      "SPACEPORT_FEE_INFO():(uint256,uint256,address,address)",
      []
    );

    return new Spaceport__SPACEPORT_FEE_INFOResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toAddress()
    );
  }

  try_SPACEPORT_FEE_INFO(): ethereum.CallResult<
    Spaceport__SPACEPORT_FEE_INFOResult
  > {
    let result = super.tryCall(
      "SPACEPORT_FEE_INFO",
      "SPACEPORT_FEE_INFO():(uint256,uint256,address,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Spaceport__SPACEPORT_FEE_INFOResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toAddress()
      )
    );
  }

  SPACEPORT_GENERATOR(): Address {
    let result = super.call(
      "SPACEPORT_GENERATOR",
      "SPACEPORT_GENERATOR():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_SPACEPORT_GENERATOR(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "SPACEPORT_GENERATOR",
      "SPACEPORT_GENERATOR():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  SPACEPORT_INFO(): Spaceport__SPACEPORT_INFOResult {
    let result = super.call(
      "SPACEPORT_INFO",
      "SPACEPORT_INFO():(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
      []
    );

    return new Spaceport__SPACEPORT_INFOResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toBigInt(),
      result[12].toBigInt(),
      result[13].toBoolean()
    );
  }

  try_SPACEPORT_INFO(): ethereum.CallResult<Spaceport__SPACEPORT_INFOResult> {
    let result = super.tryCall(
      "SPACEPORT_INFO",
      "SPACEPORT_INFO():(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Spaceport__SPACEPORT_INFOResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toBigInt(),
        value[12].toBigInt(),
        value[13].toBoolean()
      )
    );
  }

  SPACEPORT_LOCK_FORWARDER(): Address {
    let result = super.call(
      "SPACEPORT_LOCK_FORWARDER",
      "SPACEPORT_LOCK_FORWARDER():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_SPACEPORT_LOCK_FORWARDER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "SPACEPORT_LOCK_FORWARDER",
      "SPACEPORT_LOCK_FORWARDER():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  SPACEPORT_SETTINGS(): Address {
    let result = super.call(
      "SPACEPORT_SETTINGS",
      "SPACEPORT_SETTINGS():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_SPACEPORT_SETTINGS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "SPACEPORT_SETTINGS",
      "SPACEPORT_SETTINGS():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  SPACEPORT_VESTING(): Spaceport__SPACEPORT_VESTINGResult {
    let result = super.call(
      "SPACEPORT_VESTING",
      "SPACEPORT_VESTING():(uint256,uint256)",
      []
    );

    return new Spaceport__SPACEPORT_VESTINGResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_SPACEPORT_VESTING(): ethereum.CallResult<
    Spaceport__SPACEPORT_VESTINGResult
  > {
    let result = super.tryCall(
      "SPACEPORT_VESTING",
      "SPACEPORT_VESTING():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Spaceport__SPACEPORT_VESTINGResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  STATUS(): Spaceport__STATUSResult {
    let result = super.call(
      "STATUS",
      "STATUS():(bool,bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new Spaceport__STATUSResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBoolean(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt()
    );
  }

  try_STATUS(): ethereum.CallResult<Spaceport__STATUSResult> {
    let result = super.tryCall(
      "STATUS",
      "STATUS():(bool,bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Spaceport__STATUSResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBoolean(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt()
      )
    );
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUserWhitelistStatus(_user: Address): boolean {
    let result = super.call(
      "getUserWhitelistStatus",
      "getUserWhitelistStatus(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBoolean();
  }

  try_getUserWhitelistStatus(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getUserWhitelistStatus",
      "getUserWhitelistStatus(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getWhitelistedUserAtIndex(_index: BigInt): Address {
    let result = super.call(
      "getWhitelistedUserAtIndex",
      "getWhitelistedUserAtIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return result[0].toAddress();
  }

  try_getWhitelistedUserAtIndex(_index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getWhitelistedUserAtIndex",
      "getWhitelistedUserAtIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getWhitelistedUsersLength(): BigInt {
    let result = super.call(
      "getWhitelistedUsersLength",
      "getWhitelistedUsersLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getWhitelistedUsersLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getWhitelistedUsersLength",
      "getWhitelistedUsersLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  spaceportStatus(): BigInt {
    let result = super.call(
      "spaceportStatus",
      "spaceportStatus():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_spaceportStatus(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "spaceportStatus",
      "spaceportStatus():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _spaceportGenerator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddLiquidityCall extends ethereum.Call {
  get inputs(): AddLiquidityCall__Inputs {
    return new AddLiquidityCall__Inputs(this);
  }

  get outputs(): AddLiquidityCall__Outputs {
    return new AddLiquidityCall__Outputs(this);
  }
}

export class AddLiquidityCall__Inputs {
  _call: AddLiquidityCall;

  constructor(call: AddLiquidityCall) {
    this._call = call;
  }
}

export class AddLiquidityCall__Outputs {
  _call: AddLiquidityCall;

  constructor(call: AddLiquidityCall) {
    this._call = call;
  }
}

export class EditWhitelistCall extends ethereum.Call {
  get inputs(): EditWhitelistCall__Inputs {
    return new EditWhitelistCall__Inputs(this);
  }

  get outputs(): EditWhitelistCall__Outputs {
    return new EditWhitelistCall__Outputs(this);
  }
}

export class EditWhitelistCall__Inputs {
  _call: EditWhitelistCall;

  constructor(call: EditWhitelistCall) {
    this._call = call;
  }

  get _users(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _add(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class EditWhitelistCall__Outputs {
  _call: EditWhitelistCall;

  constructor(call: EditWhitelistCall) {
    this._call = call;
  }
}

export class ForceFailByPlfiCall extends ethereum.Call {
  get inputs(): ForceFailByPlfiCall__Inputs {
    return new ForceFailByPlfiCall__Inputs(this);
  }

  get outputs(): ForceFailByPlfiCall__Outputs {
    return new ForceFailByPlfiCall__Outputs(this);
  }
}

export class ForceFailByPlfiCall__Inputs {
  _call: ForceFailByPlfiCall;

  constructor(call: ForceFailByPlfiCall) {
    this._call = call;
  }
}

export class ForceFailByPlfiCall__Outputs {
  _call: ForceFailByPlfiCall;

  constructor(call: ForceFailByPlfiCall) {
    this._call = call;
  }
}

export class ForceFailIfPairExistsCall extends ethereum.Call {
  get inputs(): ForceFailIfPairExistsCall__Inputs {
    return new ForceFailIfPairExistsCall__Inputs(this);
  }

  get outputs(): ForceFailIfPairExistsCall__Outputs {
    return new ForceFailIfPairExistsCall__Outputs(this);
  }
}

export class ForceFailIfPairExistsCall__Inputs {
  _call: ForceFailIfPairExistsCall;

  constructor(call: ForceFailIfPairExistsCall) {
    this._call = call;
  }
}

export class ForceFailIfPairExistsCall__Outputs {
  _call: ForceFailIfPairExistsCall;

  constructor(call: ForceFailIfPairExistsCall) {
    this._call = call;
  }
}

export class Init1Call extends ethereum.Call {
  get inputs(): Init1Call__Inputs {
    return new Init1Call__Inputs(this);
  }

  get outputs(): Init1Call__Outputs {
    return new Init1Call__Outputs(this);
  }
}

export class Init1Call__Inputs {
  _call: Init1Call;

  constructor(call: Init1Call) {
    this._call = call;
  }

  get _spaceportOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxEthPerBuyer(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _hardcap(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _softcap(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _liquidityPercent(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _listingRate(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _startblock(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _endblock(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _lockPeriod(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }
}

export class Init1Call__Outputs {
  _call: Init1Call;

  constructor(call: Init1Call) {
    this._call = call;
  }
}

export class Init2Call extends ethereum.Call {
  get inputs(): Init2Call__Inputs {
    return new Init2Call__Inputs(this);
  }

  get outputs(): Init2Call__Outputs {
    return new Init2Call__Outputs(this);
  }
}

export class Init2Call__Inputs {
  _call: Init2Call;

  constructor(call: Init2Call) {
    this._call = call;
  }

  get _baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _spaceportToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _plfiBaseFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _plfiTokenFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _baseFeeAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _tokenFeeAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _vestingCliff(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _vestingEnd(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class Init2Call__Outputs {
  _call: Init2Call;

  constructor(call: Init2Call) {
    this._call = call;
  }
}

export class OwnerWithdrawTokensCall extends ethereum.Call {
  get inputs(): OwnerWithdrawTokensCall__Inputs {
    return new OwnerWithdrawTokensCall__Inputs(this);
  }

  get outputs(): OwnerWithdrawTokensCall__Outputs {
    return new OwnerWithdrawTokensCall__Outputs(this);
  }
}

export class OwnerWithdrawTokensCall__Inputs {
  _call: OwnerWithdrawTokensCall;

  constructor(call: OwnerWithdrawTokensCall) {
    this._call = call;
  }
}

export class OwnerWithdrawTokensCall__Outputs {
  _call: OwnerWithdrawTokensCall;

  constructor(call: OwnerWithdrawTokensCall) {
    this._call = call;
  }
}

export class SetWhitelistFlagCall extends ethereum.Call {
  get inputs(): SetWhitelistFlagCall__Inputs {
    return new SetWhitelistFlagCall__Inputs(this);
  }

  get outputs(): SetWhitelistFlagCall__Outputs {
    return new SetWhitelistFlagCall__Outputs(this);
  }
}

export class SetWhitelistFlagCall__Inputs {
  _call: SetWhitelistFlagCall;

  constructor(call: SetWhitelistFlagCall) {
    this._call = call;
  }

  get _flag(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetWhitelistFlagCall__Outputs {
  _call: SetWhitelistFlagCall;

  constructor(call: SetWhitelistFlagCall) {
    this._call = call;
  }
}

export class UpdateBlocksCall extends ethereum.Call {
  get inputs(): UpdateBlocksCall__Inputs {
    return new UpdateBlocksCall__Inputs(this);
  }

  get outputs(): UpdateBlocksCall__Outputs {
    return new UpdateBlocksCall__Outputs(this);
  }
}

export class UpdateBlocksCall__Inputs {
  _call: UpdateBlocksCall;

  constructor(call: UpdateBlocksCall) {
    this._call = call;
  }

  get _startBlock(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _endBlock(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateBlocksCall__Outputs {
  _call: UpdateBlocksCall;

  constructor(call: UpdateBlocksCall) {
    this._call = call;
  }
}

export class UpdateMaxSpendLimitCall extends ethereum.Call {
  get inputs(): UpdateMaxSpendLimitCall__Inputs {
    return new UpdateMaxSpendLimitCall__Inputs(this);
  }

  get outputs(): UpdateMaxSpendLimitCall__Outputs {
    return new UpdateMaxSpendLimitCall__Outputs(this);
  }
}

export class UpdateMaxSpendLimitCall__Inputs {
  _call: UpdateMaxSpendLimitCall;

  constructor(call: UpdateMaxSpendLimitCall) {
    this._call = call;
  }

  get _maxSpend(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaxSpendLimitCall__Outputs {
  _call: UpdateMaxSpendLimitCall;

  constructor(call: UpdateMaxSpendLimitCall) {
    this._call = call;
  }
}

export class UserDepositCall extends ethereum.Call {
  get inputs(): UserDepositCall__Inputs {
    return new UserDepositCall__Inputs(this);
  }

  get outputs(): UserDepositCall__Outputs {
    return new UserDepositCall__Outputs(this);
  }
}

export class UserDepositCall__Inputs {
  _call: UserDepositCall;

  constructor(call: UserDepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UserDepositCall__Outputs {
  _call: UserDepositCall;

  constructor(call: UserDepositCall) {
    this._call = call;
  }
}

export class UserWithdrawBaseTokensCall extends ethereum.Call {
  get inputs(): UserWithdrawBaseTokensCall__Inputs {
    return new UserWithdrawBaseTokensCall__Inputs(this);
  }

  get outputs(): UserWithdrawBaseTokensCall__Outputs {
    return new UserWithdrawBaseTokensCall__Outputs(this);
  }
}

export class UserWithdrawBaseTokensCall__Inputs {
  _call: UserWithdrawBaseTokensCall;

  constructor(call: UserWithdrawBaseTokensCall) {
    this._call = call;
  }
}

export class UserWithdrawBaseTokensCall__Outputs {
  _call: UserWithdrawBaseTokensCall;

  constructor(call: UserWithdrawBaseTokensCall) {
    this._call = call;
  }
}

export class UserWithdrawTokensCall extends ethereum.Call {
  get inputs(): UserWithdrawTokensCall__Inputs {
    return new UserWithdrawTokensCall__Inputs(this);
  }

  get outputs(): UserWithdrawTokensCall__Outputs {
    return new UserWithdrawTokensCall__Outputs(this);
  }
}

export class UserWithdrawTokensCall__Inputs {
  _call: UserWithdrawTokensCall;

  constructor(call: UserWithdrawTokensCall) {
    this._call = call;
  }
}

export class UserWithdrawTokensCall__Outputs {
  _call: UserWithdrawTokensCall;

  constructor(call: UserWithdrawTokensCall) {
    this._call = call;
  }
}
