type SpaceportFactory @entity {
  id: ID!
  "Should be equal SpaceportFactory.spaceportsLength"
  spaceportsLength: BigInt!
}

type Spaceport @entity {
  id: ID!
  "Should be equal SpaceportFactory.spaceportsAtIndex"
  spaceportIndex: BigInt!
  owner: String!
  spaceToken: Token!
  baseToken: Token!
  inEth: Boolean!
  "0 = QUEUED; 1 = ACTIVE; 2 = SUCCESS; 3 = FAILED"
  status: BigInt!
  participants: [Participant!]! @derivedFrom(field: "spaceport")
  "Count of participants with a positive deposit"
  participantsCount: BigInt!
  depositTotal: BigDecimal!
  lpGenerationComplete: Boolean!
  lpGenerationCompleteTime: BigInt!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  finishedAtTimestamp: BigInt
  startBlock: BigInt!
  endBlock: BigInt!
}

type User @entity {
  id: ID!
  spaceports: [Participant!] @derivedFrom(field: "participant")
}

type Participant @entity {
  id: ID!
  participant: User!
  spaceport: Spaceport!
  deposit: BigDecimal!
}

type Token @entity {
  id: ID!
  symbol: String!
  name: String!
  decimals: BigInt!
}

enum TimeFramePeriod {
  ONE_HOUR
  ONE_DAY
  ONE_WEEK
  ONE_MONTH
}

type SpaceportStat @entity {
  id: ID!
  spaceport: Spaceport!
  period: TimeFramePeriod!
  periodStart: BigInt!

  participantsCount: BigInt!
  depositTotal: BigDecimal!
}

type LatestUpdatedBlock @entity {
  id: ID!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
}

type UpdateTask @entity {
  id: ID!
  spaceports: [String!]!
}
